model1 <- glm(data=pres,WININC~GROWTH,family=binomial)
summary(model1)
-0.5*model1$deviance
2-2(-0.5*model1$deviance)
model1 <- glm(data=pres,WININC~GROWTH,family=binomial)
summary(model1)
-0.5*model1$deviance
2-2(-0.5*model1$deviance)
model1 <- glm(data=pres,WININC~GROWTH,family=binomial)
summary(model1)
-0.5*model1$deviance
2-2*(-0.5*model1$deviance)
model1 <- glm(data=pres,WININC~GROWTH,family=binomial)
summary(model1)
-0.5*model1$deviance
2(2)-2*(-0.5*model1$deviance)
model1 <- glm(data=pres,WININC~GROWTH,family=binomial)
summary(model1)
-0.5*model1$deviance
2*(1+1)-2*(-0.5*model1$deviance)
model1 <- glm(data=pres,WININC~GROWTH,family=binomial)
summary(model1)
```-0.5*model1$deviance
presnew <- pres
presnew$WIN
(presnew$WIN==1)
as.integer(presnew$WIN==1)
presnew$WIN <- as.integer(presnew$WIN==1)
presnew$GROWTH
pres$WIN
presnew$GROWTH
presnew$GROWTH <- pres$WIN * presnew$GROWTH
presnew$GROWTH
presnew$GOOD
presnew$GOOD <- pres$WIN * presnew$GOOD
presnew$GOOD
model2 <- glm(data=presnew,WIN~+INC+RUN+DUR+GROWTH+GOOD,family=binomial)
summary(model2)
presnew <- pres
presnew$WIN <- as.integer(presnew$WIN==1)
presnew$GROWTH <- pres$INC * presnew$GROWTH
presnew$GROWTH
presnew$GOOD <- pres$INC * presnew$GOOD
presnew$GOOD
model2 <- glm(data=presnew,WIN~+INC+RUN+DUR+GROWTH+GOOD,family=binomial)
summary(model2)
model3 <- glm(data=presnew,WIN~RUN+DUR+GROWTH-1,family=binomial)
summary(model3)
-1.7852 + 2*0.4690
exp(-0.8472)
1/(1+(-(-1.7852 + 2*0.4690)))
-1.7852 + 2*0.4690
exp(-0.8472)
1/(1+(exp(-1.7852 + 2*0.4690)))
-1.7852 + 2*0.4690
(-1.7852) + (2*0.4690)
exp(-0.8472)
1/(1+(exp(-1.7852 + 2*0.4690)))
(-1.7852) + (2*0.4690)
exp(-0.8472)/(1+exp(-0.8472))
1/(1+(exp(-1.7852 + 2*0.4690)))
(-1.7852) + (2*0.4690)
exp(-0.8472)/(1+exp(-0.8472))
1/(1+(exp(-(-1.7852 + 2*0.4690)))
(-1.7852) + (2*0.4690)
exp(-0.8472)/(1+exp(-0.8472))
1/(1+(exp(-(-1.7852 + 2*0.4690))))
college <- read.csv("../W4/0) Prac (W4 & W5)/College.csv")
str(college)
splitset <- sample(college,0.8)
set.seed(1)
splitset <- sample(college,0.8)
splitset
trainid <- sample(1:nrow(college),0.8*nrow(college))
set.seed(1)
trainid <- sample(1:nrow(college),0.8*nrow(college))
trainid
testid <- -trainid
train<- college[trainid,]
test<- college[testid,]
str(test)
str(train)
model1 <- lm(data=train, Apps~.)
summary(model1)
model1 <- lm(data=train, Apps~.)
summary(model1)
mean((train$Apps - model1)^2)
model1$residuals
model1 <- lm(data=train, Apps~.)
summary(model1)
mean(model1$residuals^2)
regsubsets(Apps~.,college)
library(leaps)
regsubsets(Apps~.,college)
regsubsets(Apps~.,college,nvmax=18,method=backwards)
regsubsets(Apps~.,college,nvmax=18,method=backward)
regsubsets(Apps~.,college,nvmax=18,method=c(backward))
regsubsets(Apps~.,college,nvmax=18,method="backward")
model3 <- regsubsets(Apps~.,college,nvmax=18,method="backward")
summary(model3)
plot(summary(model3)$adjr2)
max(summary(model3)$adjr2)
which.max(summary(model3)$adjr2)
summary(model3)$coef[chosen]
chosen <- which.max(summary(model3)$adjr2)
summary(model3)$coef[chosen]
summary(model3)[chosen]
summod3
summod3 <- summary(model3)
plot(summod3$adjr2)
max(summod3$adjr2)
chosen <- which.max(summod3$adjr2)
chosen
summod3$which[chosen]
summod3$which
chosen
summod3$which
summod3$which[13]
summod3$which[,13]
summod3$which[13,]
plot(summod3$adjr2)
max(summod3$adjr2)
chosen <- which.max(summod3$adjr2)
chosen
summod3$which[chosen,]
model4 <- lm(data=train, Apps~Private+Accept+Enroll+Top10perc+Top25perc+F.Undergrad+Outstate+Room.Board+PhD+S.F.Ratio+Expend+Grad.Rate
)
summary(model4)
sse <- sum( (model4 - test$Apps)^2 )
model4pred <- predict(model4,newdata=train)
sse <- sum( (model4pred - test$Apps)^2 )
sst <- sum( test$Apps - mean(train$Apps) )^2)
sst <- sum(( test$Apps - mean(train$Apps) )^2)
1-sse/sst
mean((test$Appsa - model4pred)^2)
mean((test$Apps - model4pred)^2)
model4pred <- predict(model4,newdata=test)
mean((test$Apps - model4pred)^2)
grid <- 10^ seq(10,-2, length=100)
x <- model.matrix(Apps~, college)
library(glmnet)
grid <- 10^ seq(10,-2, length=100)
x <- model.matrix(Apps~, college)
library(glmnet)
grid <- 10^ seq(10,-2, length=100)
x <- model.matrix(Apps~.,college)
y <- college$Apps
modellasso <- glmnet(x[trainid,],y[trainid],lambda=grid)
plot(modellasso,xvar="lambda")
cvlasso <- cv.glmnet(x[train,],y[train])   #lambda=grid may help (default is NULL)
set.seed(1)
cvlasso <- cv.glmnet(x[trainid,],y[trainid])   #lambda=grid may help (default is NULL)
cvlasso$glmnet.fit
cvlasso$lambda.min
plot(cvlasso$lambda,cvlasso$cvm)
predictlassocv <- predict(modellasso,s=22.18,newx=x[test,])
cvlasso$glmnet.fit
cvlasso$lambda.min
plot(cvlasso$lambda,cvlasso$cvm)
summary(cvlasso)
set.seed(1)
cvlasso <- cv.glmnet(x[trainid,],y[trainid])   #lambda=grid may help (default is NULL)
cvlasso$glmnet.fit
cvlasso$lambda.min
predictlassocv <- predict(modellasso,s=cvlasso$lambda.min,newx=x[test,])
predictlassocv <- predict(modellasso,s=cvlasso$lambda.min,newx=x[testid,])
predictlassocv
summary(predictlassocv)
cvlasso$nzero
cvlasso$glmnet.fit
summary(cvlasso$glmnet.fit)
cvlasso$glmnet.fit
cvlasso$glmnet.fit[17]
summary(predictlassocv)
predictlassocv
hitters <- read.csv("hitters.csv")
str(hitters)
hitters<-na.omit(hitters)
str(hitters)
library(leaps)
?regsubsets
hitters <- hitters[,2:21]
model1 <- regsubsets(Salary~.,hitters)
summary(model1)
model2<-regsubsets(Salary~.,hitters,nvmax=19)
summary(model2)
names(summary(model2))
summary(model2)$rsq
plot(summary(model2)$rsq)
plot(summary(model2)$rss)
plot(summary(model2)$adjr2)
which.max(summary(model2)$adjr2)
coef(model2,11)
model3<-regsubsets(Salary~.,data=hitters,nvmax=19,method="forward")
which.max(summary(model3)$adjr2)
coef(model3,11)
summary(model2)$adjr2-summary(model3)$adjr2
plot(summary(model3)$adjr2)
library(glmnet)
X <- model.matrix(Salary~.,hitters)
y <- hitters$Salary
str(X)
grid<-10^seq(10,-2, length=100)
set.seed(1)
train <- sample(1:nrow(X),nrow(X)/2)
test <- -train
modellasso <- glmnet(X[train,],y[train],lambda=grid)
summary(modellasso)
modellasso
deviance(modellasso)
plot(modellasso,xvar="lambda",label=TRUE)
modellasso$df
modellasso$beta
coef(modellasso)
modellasso$lambda
predictlasso1 <- predict(modellasso,newx=X[test,],s=100)
mean((predictlasso1-y[test])^2)
predictlasso2 <- predict(modellasso,newx=X[test,],s=50)
mean((predictlasso2-y[test])^2)
predictlasso3 <- predict(modellasso,newx=X[test,],s=200)
mean((predictlasso3-y[test])^2)
?predict.glmnet
predictlasso1a <- predict(modellasso,newx=X[test,],s=100,exact=T,x=X[train,],y=y[train])
mean((predictlasso1a-y[test])^2)
predictlasso2a <- predict(modellasso,newx=X[test,],s=50,exact=T,x=X[train,],y=y[train])
mean((predictlasso2a-y[test])^2)
predictlasso3a <- predict(modellasso,newx=X[test,],s=200,exact=T,x=X[train,],y=y[train])
mean((predictlasso3a-y[test])^2)
predictlasso4 <- predict(modellasso,newx=X[test,],s=0,exact=T,x=X[train,],y=y[train])
mean((predictlasso4-y[test])^2)
predictlasso5 <- predict(modellasso,newx=X[test,],s=10^10,exact=T,x=X[train,],y=y[train])
mean((predictlasso5-y[test])^2)
heating <-read.csv("Heating.csv")
str (heating)
library(mlogit)
#i
H <- mlogit.data(heating, shape="wide", choice = "depvar", varying = c(3:12))
m <- mlogit(data = H,depvar ~ ic + oc-1)
summary(m)
#iii
#apply(fitted(m,outcome=FALSE),2,mean)
pred1 <- predict(m,newdata=H)
table(heating$depvar)/900
apply(pred1,2,mean)
#iv
coef(m)["oc"]/coef(m)["ic"]
H <- mlogit.data(heating, shape="wide", choice = "depvar", varying = c(3:12))
m <- mlogit(data = H,depvar ~ ic + oc-1)
summary(m)
#iii
#apply(fitted(m,outcome=FALSE),2,mean)
pred1 <- predict(m,newdata=H)
table(heating$depvar)/900
apply(pred1,2,mean)
#iv
coef(m)["oc"]/coef(m)["ic"]
heating <-read.csv("Heating.csv")
str (heating)
library(mlogit)
#i
H <- mlogit.data(heating, shape="wide", choice = "depvar", varying = c(3:12))
m <- mlogit(data = H,depvar ~ ic + oc-1)
summary(m)
#iii
#apply(fitted(m,outcome=FALSE),2,mean)
pred1 <- predict(m,newdata=H)
table(heating$depvar)/900
apply(pred1,2,mean)
#iv
coef(m)["oc"]/coef(m)["ic"]
pred1
0
apply(pred1,2,mean)
software <- read.csv("software.csv")
breast <- read.csv("breascancer.csv")
software <- read.csv("software.csv")
breast <- read.csv("breastcancer.csv")
str(software)
software <- read.csv("software.csv")
breast <- read.csv("breastcancer.csv")
str(software)
str(breast)
hist(software$spending)
hist(software$spending, breaks = (0,2000,5))
hist(software$spending, breaks = seq(0,2000,5))
hist(software$spending, breaks = seq(0,10,5))
hist(software$spending, breaks = seq(0,100,5))
hist(software$spending, breaks = seq(0,2000,10))
hist(software$spending, breaks = seq(0,2000,100))
mean(software$spending)
hist(software$spending, breaks = seq(0,2000,100))
mean(software$spending)
tr(software)
str(software)
mean(software$spending[software$gender==1])
mean(software$spending[software$gender==0]) #females
sd(software$spending[software$gender==1])
sd(software$spending[software$gender==1])^2
var(software$spending[software$gender==1])
mean(software$spending[software$gender==1]) #males
sd(software$spending[software$gender==1])^2
var(software$spending[software$gender==1])
mean(software$spending[software$gender==0]) #females
var(software$spending[software$gender==0])
avgspendM <- mean(software$spending[software$gender==1])
avgspendF <- mean(software$spending[software$gender==0])
t.test(avgspendM,avgspendF)
avgspendM
avgspendM <- software$spending[software$gender==1]
avgspendF <- software$spending[software$gender==0]
t.test(avgspendM,avgspendF)
software$partition
#software$partition
softtrain <- software[software$partition=='t']
#software$partition
software[software$partition=='t']
#software$partition
software[,software$partition=='t']
#software$partition
software[software$partition=='t',]
#software$partition
software[software$partition=='v',]
#software$partition
softtrain <- software[software$partition=='t',]
softtest <- software[software$partition=='test',]
softval <- software[software$partition=='v',]
lm14 <- lm(data=)
softtrain$partition
#software$partition
softtrain <- software[software$partition=='t',]
softtest <- software[software$partition=='test',]
softval <- software[software$partition=='v',]
softtrain$partition
lm14 <- lm(data=)
softtest$partition
#software$partition
softtrain <- software[software$partition=='t',]
softtest <- software[software$partition=='test',]
softval <- software[software$partition=='v',]
softtest$partition
lm14 <- lm(data=)
lm14 <- lm(data=softtrain,spending~freq+last_update+first_update+web_order+address_res+address_us)
summary(lm14)
lm16 <- lm(data=softtrain,spending~freq+last_update+address_res+address_us)
summary(lm16)
library(leaps)
regsubsets(spending~freq+last_update+first_update+web_order+address_res+address_us,softtrain)
model17 <- regsubsets(spending~freq+last_update+first_update+web_order+address_res+address_us,softtrain)
summary(model17)
model17 <- regsubsets(spending~freq+last_update+first_update+web_order+address_res+address_us,softtrain,nvmax=10,method='backward')
summary(model17)
plot18 <- summary(model17)$adjr2
plot(plot18)
maxRsquare <- which.max(plot18)
maxRsquare
plot18[maxRsquare]
summary(model17)$which[maxRsquare,]
plot18 <- summary(model17)$adjr2
plot(plot18)
maxRsquare <- which.max(plot18)
maxRsquare
plot18[maxRsquare]
summary(model17)$which
summary(model17)$which[maxRsquare,]
lm16 <- lm(data=softtrain,spending~freq+address_res)
summary(lm16)
ModelPredFull <- predict(lm14, newdata = softval)
ModelPredSmall <- predict(lm16, newdata = softval)
ModelPredSubset <- predict(lm17, newdata = softval)
ModelPredSubset <- predict(model17, newdata = softval)
lm17 <- lm(data=softtrain,spending~freq+last_update+address_res+address_us)
ModelPredSubset <- predict(lm17, newdata = softval)
ModelPredFull <- predict(lm14, newdata = softval)
ModelPredSmall <- predict(lm16, newdata = softval)
lm17 <- lm(data=softtrain,spending~freq+last_update+address_res+address_us)
ModelPredSubset <- predict(lm17, newdata = softval)
sseFULL <- sum( (ModelPredFull - softval$spending)^2 )
sseSMALL <- sum( (ModelPredSmall - softval$spending)^2 )
sseSUBSET <- sum( (ModelPredSubset - softval$spending)^2 )
ModelPredFull <- predict(lm14, newdata = softval)
ModelPredSmall <- predict(lm16, newdata = softval)
lm17 <- lm(data=softtrain,spending~freq+last_update+address_res+address_us)
ModelPredSubset <- predict(lm17, newdata = softval)
sseFULL <- sum( (ModelPredFull - softval$spending)^2 )
sseFULL
sseSMALL <- sum( (ModelPredSmall - softval$spending)^2 )
sseSMALL
sseSUBSET <- sum( (ModelPredSubset - softval$spending)^2 )
sseSUBSET
ModelPredFull <- predict(lm14, newdata = softtest)
ModelPredSmall <- predict(lm16, newdata = softtest)
ModelPredSubset <- predict(lm17, newdata = softtest)
sseFULL <- sum( (ModelPredFull - softtest$spending)^2 )
sseFULL
sseSMALL <- sum( (ModelPredSmall - softtest$spending)^2 )
sseSMALL
sseSUBSET <- sum( (ModelPredSubset - softtest$spending)^2 )
sseSUBSET
str(breast)
summary(breast)
table(breast$severity)
table(breast$severity)[0]
table(breast$severity)[0,]
table(breast$severity)[1]
table(breast$severity)
516/(516+445)
table(breast$severity)
516/(516+445)
table(breast$severity)
516/(516+445)
445/(516+445)
na.omit(breast)
str(na.omit(breast))
summary(na.omit(breast))
newbreast<- summary(na.omit(breast))
set.seed(1000)
library(caTools)
split <- sample.split(newbreast$Y, SplitRatio = 0.6)
summary(newbreast)
newbreast<- summary(na.omit(breast))
summary(newbreast)
newbreast
newbreast<- na.omit(breast)
summary(newbreast)
set.seed(1000)
library(caTools)
split <- sample.split(newbreast$Y, SplitRatio = 0.6)
split <- sample.split(newbreast$severity, SplitRatio = 0.6)
newbreast<- na.omit(breast)
summary(newbreast)
set.seed(1000)
library(caTools)
split <- sample.split(newbreast$severity, SplitRatio = 0.6)
train <- subset(newbreast, split == TRUE)
test <- subset(newbreast, split == FALSE)
newbreast<- na.omit(breast)
summary(newbreast)
set.seed(1000)
library(caTools)
breastsplit <- sample.split(newbreast$severity, SplitRatio = 0.6)
breasttrain <- subset(newbreast, breastsplit == TRUE)
breasttest <- subset(newbreast, breastsplit == FALSE)
glm23 <- glm(data=breasttrain)
glm23 <- glm(data=breasttrain,severity~age+shape+margin+density,family=binomial)
summary(glm23)
BreastModelPredict <- predict(glm23, newdata = breasttest,type="response")
summary(BreastModelPredict)
pres <- read.csv("presidential.csv")
table(as.integer(BreastModelPredict >= 0.5),breasttest$severity)
(127+139)/(127+139+22+44)
-0.5*glm23$deviance
glm26 <- glm(data=breasttrain,severity~age+shape+margin,family=binomial)
summary(glm26)
-0.5*glm26$deviance
BreastModelPredict2 <- predict(glm26, newdata = breasttest,type="response")
table(as.integer(BreastModelPredict2 >= 0.5),breasttest$severity)
glm26 <- glm(data=breasttrain,severity~age+shape+margin,family=binomial)
summary(glm26)
-0.5*glm26$deviance
BreastModelPredict2 <- predict(glm26, newdata = breasttest,type="response")
table(as.integer(BreastModelPredict2 >= 0.5),breasttest$severity)
(126+141)/(125+141+20+45)
performance(ROCR_Predict, measure = "auc", fpr.stop=0.7)
library(ROCR)
ROCR_Predict <- prediction(glm26, breasttest$severity)
library(ROCR)
ROCR_Predict <- prediction(BreastModelPredict2, breasttest$severity)
performance(ROCR_Predict, measure = "auc", fpr.stop=0.7)
plot27 <- performance(ROCR_Predict, measure = "auc", fpr.stop=0.7)
plot(plot27)
performance(ROCR_Predict, measure = "auc", fpr.stop=0.7)
plot(plot27)
performance(ROCR_Predict, measure = "auc", fpr.stop=0.7)
glm28 <- glm(data=breasttrain,severity~age+shape+margin,family=binomial(link="probit"))
-0.5*glm28$deviance
BreastModelPredict2 <- predict(glm28, newdata = breasttest,type="response")
table(as.integer(BreastModelPredict2 >= 0.5),breasttest$severity)
(126+140)/(125+140+21+45)
cumprod(3)
0.2*0.4 + 0.2
0.4*0.4 + 0.4
cumprod(3,5)
cumprod(3/5)
cumprod(c(3,4))
cumprod(c(4,6))
seq(4:100)
seq(4,100,by=2)
seq(6,seq(4,100,by=2),by=2)
seq(4,100,by=2)
breast$physician
newbreast$physician
newbreast$physician>=4
as.integer(newbreast$physician>=4)
newbreast$physician
newerbreast$severity <- as.integer(newbreast$physician>=4)
newerbreast <- newbreast
newerbreast$severity <- as.integer(newbreast$physician>=4)
newerbreast <- newbreast
newerbreast$severity <- as.integer(newbreast$physician>=4)
glm210 <- glm(data=newerbreast,severity~age+shape+margin,family=binomial)
summary(glm210)
BreastModelPredict3 <- predict(glm210, newdata = newerbreast,type="response")
table(as.integer(BreastModelPredict3 >= 0.5),newerbreast$severity)
table(newerbreast$severity)
table(newbreast$severity)
794-403
cumprod(c(4,6))
cumprod(seq(4,100,by=2))
cumprod(4,6,8)
cumprod(c(4,6,8)
savehistory("D:/School Stuff/40 .220 The Analytics Edge/Midterm/Midterm.Rhistory")
savehistory("D:/School Stuff/40 .220 The Analytics Edge/Midterm/hist.Rhistory")
